version: '3.8'

services:

  frontend:
    image: "gamewe/frontend"
    ports:
      - 3000:3000
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      "./client/.env"
    depends_on:
      - backend
          
  backend:
    image: "gamewe/backend"
    ports:
      - 8080:8080
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    env_file:
        "./server/.env"
    volumes:
      - /web/server/node_modules
      - ./server:/web/server
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://backend:8080"]
      interval: 5s
      timeout: 3s
      retries: 6

  mongodb:
    image: mongo:latest
    ports:
      - 27018:27017
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:latest
    ports:
     - 80:80
    build:
      context: ./infra/nginx
      dockerfile: Dockerfile
    volumes:
      - ./infra/nginx/prod.conf:/etc/infra/nginx/prod.conf
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started


  redis:
    image: redis:latest
    restart: always
    expose:
      - "6379"
    volumes: 
      - cache:/data
      - cache:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc 127.0.0.1 2181" ]
      start_period: 20s
      interval: 20s
      timeout: 20s
      retries: 5

  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc 127.0.0.1 2181" ]
      start_period: 20s
      interval: 20s
      timeout: 20s
      retries: 5
      
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    healthcheck:
      test:
        [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      start_period: 20s
      interval: 10s
      timeout: 20s
      retries: 5
    restart: on-failure
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      #KAFKA_CREATE_TOPICS: "topic-test:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


volumes: 
  db:
  cache:

networks:
  gamewe: 
    driver: bridge